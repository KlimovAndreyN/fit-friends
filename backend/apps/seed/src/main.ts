import { Logger, } from '@nestjs/common';
import { NestFactory } from '@nestjs/core';

import { FitUserRepository } from '@backend/account/fit-user';
import { QuestionnaireRepository } from '@backend/fit/questionnaire';

import { AppModule } from './app/app.module';
import { generateSportsmans } from './libs/generate-sportsmans';
import { generateQuestionnaires } from './libs/generate-questionnaires';

async function bootstrap() {
  //! –≤–æ–∑–º–æ–∂–Ω–æ —Å—Ç–æ–∏—Ç —Å–¥–µ–ª–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É —Å –∫–æ–Ω—Ñ–∏–≥–æ–º –∏–ª–∏ –ø—Ä–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å ConfigModule —É–∫–∞–∑–∞–≤ env-—Ñ–∞–π–ª
  //! –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–∑ dist, –Ω–µ –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–Ω—á–µ–Ω–∏—è ENV –≤ DATABASE_URL? –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö - –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
  //! –µ—Å–ª–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ConfigModule –ø–æ–¥—Å—Ç–∞–≤–∏—Ç—å "expandVariables: true", —Ç–æ –∏–∑ –¥–∏—Å—Ç –≤—Å–µ –æ–∫
  //! –ø—Ä–æ—Å—Ç–∞–≤–∏—Ç—å –≤—Å–µ–º –∫–æ–Ω—Ñ–∏–≥–∞–º expandVariables –∏ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–Ω—Ñ–∏–≥–∞ - ConfigModuleOptions
  //! –∏ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∏–∑ –¥–∏—Å—Ç, –º–æ–∂–Ω–æ –Ω–µ —É–∫–∞–∑—ã–≤–∞—Ç—å env-—Ñ–∞–π–ª, –º–æ–∂–µ—Ç –µ—Å—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∫–ª—é—á –∫ --env-file... env-parse?
  // –º–æ–∂–µ—Ç –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ serve, –≤—Å–µ –ø–æ–¥—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ...
  const app = await NestFactory.create(AppModule);
  const resetBeforeSeed = process.env['RESET_BEFORE_SEED'] === 'true';

  Logger.log('Seed runing...');
  Logger.log(`Reset before seed is ${resetBeforeSeed}`);
  Logger.log(`Fit postgres url: ${process.env['FIT_DATABASE_URL']}`); //! –Ω–∞ ENV!

  try {
    const sportsmans = await generateSportsmans(app.get(FitUserRepository), resetBeforeSeed);

    Logger.log(`Sportsmans count: ${sportsmans.length}`);
    Logger.log('ü§òÔ∏è Database Account(mongoDb) was filled!');

    const questionnaires = await generateQuestionnaires(app.get(QuestionnaireRepository), sportsmans, resetBeforeSeed);
    Logger.log(`Questionnaires count: ${questionnaires.length}`);
    Logger.log('ü§òÔ∏è Database Fit(postgres) was filled!');

    globalThis.process.exit(0);
  } catch (error: unknown) {
    console.error(error);
  } finally {
    globalThis.process.exit(1);
  }
}

bootstrap();
