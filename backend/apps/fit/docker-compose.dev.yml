# docker compose --file ./docker-compose.dev.yml --env-file ./docker-compose.dev.env up -d
name: fit-friends.fit
networks:
  fit.networks:
     driver: bridge
configs:
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "docker.fit.postgres",
        "Host": "fit.postgres",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "${POSTGRES_USER}",
        "Password": "${POSTGRES_PASSWORD}"
      }}}
volumes:
  fit.postgres:
  fit.pgadmin:
services:
  fit.postgres:
    image: postgres:14-alpine
    container_name: fit.postgres
    hostname: fit.postgres
    restart: always
    volumes:
      - fit.postgres:/var/lib/postgresql/data
    networks:
      - fit.networks
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  fit.pgadmin:
    image: dpage/pgadmin4
    container_name: fit.pgadmin
    hostname: fit.pgadmin
    restart: always
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
    volumes:
      - fit.pgadmin:/var/lib/pgadmin
    networks:
      - fit.networks
    ports:
      - ${PGADMIN_PORT}:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    depends_on:
      - fit.postgres
